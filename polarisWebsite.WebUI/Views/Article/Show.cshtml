@model polarisWebsite.WebUI.Models.ArticleViewModel
@{
    ViewBag.Title = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/blog.css" rel="stylesheet">
<script src="~/Scripts/showdown.js"></script>

<div class="container">
    <div class="row">
        <div id="blogContent" class="col-md-9"
             data-spy="scroll" data-target="#Content" data-offset="0"
             style="overflow-y:auto; height:480px">
            <div id="blog" class="container-fluid"> </div>
        </div>
        <div id="SideBar" class="col-md-3">
            <div style="position:fixed">
                <h2>@Model.Title</h2>
                <nav id="Content">
                    <ul id="sidebarContent"
                        class="nav nav-pills nav-stacked"></ul>
                </nav>
            </div>
        </div>
    </div>

    <script>
        var converter = new showdown.Converter();
        converter.setOption('simpleLineBreaks', true);
        document.getElementById("blog").innerHTML = converter.makeHtml("@Model.Content.Trim('\"')");
        
    </script>
    <script>
        var doc = document.getElementById("blog").innerHTML.toString();
        //alert(doc);
        var pattern = new RegExp("<h([1-6]) id=\"(.+)\">(.*)</h[1-6]>", "g");
        var content = "";
        var result;
        var lastDepth = 0;
        while((result = pattern.exec(doc)) != null)
        {
            var depth = parseInt(result[1]);
            if (depth > lastDepth)
            {
                for (var i = 0; i < depth - lastDepth; i++)
                {
                    content += "<ul  class=\"nav nav-pills nav-stacked\">";
                }
            }
            else
            {
                for (var i = 0; i < lastDepth - depth + 1; i++)
                {
                    content += "</ul>";
                }
                content += "<ul class=\"nav nav-pills nav-stacked\">";
            }
            var spaceEntity = "";
            for (var i = 0; i < depth - 1; i++) spaceEntity += "&emsp;&emsp;";
            content += "<li><a href=\"#" + result[2] + "\">" + spaceEntity + result[3] + "</a></li>";
            lastDepth = depth;
        }
        for (var i = 0; i < lastDepth; i++) content += "</ul>";

        document.getElementById("sidebarContent").innerHTML = content;
        
    </script>
    <script type="text/x-mathjax-config">
        MathJax.Hub.Config({
        tex2jax: {inlineMath: [['$','$'], ["\(","\)"]]}
        });
    </script>
</div>
<script type="text/javascript" async
        src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML">
</script>
